<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="macros">
    <xacro:macro name="wheel" params="name x1 y1 z1
                                      ixx ixy ixz iyy iyz izz
                                      x2 y2 z2 roll2 pitch2 yaw2">
        <link name="${name}">
            <inertial>
                <origin xyz="${x1} ${y1} ${z1}" rpy="0 0 0"/>
                <mass value="0.700837"/>
                <inertia ixx="${ixx}" ixy="${ixy}" ixz="${ixz}" iyy="${iyy}" iyz="${iyz}" izz="${izz}"/>
            </inertial>
            <visual>
                <origin xyz="${x2} ${y2} ${z2}" rpy="${roll2} ${pitch2} ${yaw2}"/>
                <geometry>
                    <mesh filename="package://tank/meshes/tank/wheel.stl"/>
                </geometry>
                <material name="${name}_material">
                    <color rgba="0.1 0.1 0.1 1.0"/>
                </material>
            </visual>
            <collision>
                <origin xyz="${x2} ${y2} ${z2}" rpy="${roll2} ${pitch2} ${yaw2}"/>
                <geometry>
                    <mesh filename="package://tank/meshes/tank/wheel.stl"/>
                </geometry>
            </collision>
        </link>
    </xacro:macro>

    <xacro:macro name="track" params="name x1 y1 z1
                                      ixx ixy ixz iyy iyz izz
                                      x2 y2 z2 roll2 pitch2 yaw2">
        <link name="${name}">
            <inertial>
                <origin xyz="${x1} ${y1} ${z1}" rpy="0 0 0"/>
                <mass value="2.4385"/>
                <inertia ixx="${ixx}" ixy="${ixy}" ixz="${ixz}" iyy="${iyy}" iyz="${iyz}" izz="${izz}"/>
            </inertial>
            <visual>
                <origin xyz="${x2} ${y2} ${z2}" rpy="${roll2} ${pitch2} ${yaw2}"/>
                <geometry>
                    <mesh filename="package://tank/meshes/tank/track.stl"/>
                </geometry>
                <material name="${name}_material">
                    <color rgba="0.1 0.1 0.1 1.0"/>
                </material>
            </visual>
            <collision>
                <origin xyz="${x2} ${y2} ${z2}" rpy="${roll2} ${pitch2} ${yaw2}"/>
                <geometry>
                    <mesh filename="package://tank/meshes/tank/track.stl"/>
                </geometry>
            </collision>
        </link>
    </xacro:macro>

    <xacro:macro name="link" params="name x1 y1 z1 mass
                                     ixx ixy ixz iyy iyz izz
                                     x2 y2 z2 roll2 pitch2 yaw2
                                     r g b a">
        <link name="${name}">
            <inertial>
                <origin xyz="${x1} ${y1} ${z1}" rpy="0 0 0"/>
                <mass value="${mass}"/>
                <inertia ixx="${ixx}" ixy="${ixy}" ixz="${ixz}" iyy="${iyy}" iyz="${iyz}" izz="${izz}"/>
            </inertial>
            <visual>
                <origin xyz="${x2} ${y2} ${z2}" rpy="${roll2} ${pitch2} ${yaw2}"/>
                <geometry>
                    <xacro:if value="${name == 'base_link'}">
                        <mesh filename="package://tank/meshes/tank/chassis.stl"/>
                    </xacro:if>
                    <xacro:if value="${name == 'camera' or name == 'lidar'}">
                        <mesh filename="package://tank/meshes/tank/${name}.stl"/>
                    </xacro:if>
                </geometry>
                <material name="${name}_material">
                    <color rgba="${r} ${g} ${b} ${a}"/>
                </material>
            </visual>
            <collision>
                <origin xyz="${x2} ${y2} ${z2}" rpy="${roll2} ${pitch2} ${yaw2}"/>
                <geometry>
                    <xacro:if value="${name == 'base_link'}">
                        <mesh filename="package://tank/meshes/tank/chassis.stl"/>
                    </xacro:if>
                    <xacro:if value="${name == 'camera' or name == 'lidar'}">
                        <mesh filename="package://tank/meshes/tank/${name}.stl"/>
                    </xacro:if>
                </geometry>
            </collision>
        </link>
    </xacro:macro>

    <xacro:macro name="joint" params="name type x1 y1 z1 roll pitch yaw
                                      parent_link child_link
                                      effort:=10 velocity:=10 lower:=0 upper:=0">
        <joint name="${name}" type="${type}">
            <dynamics damping="0.1"/>
            <origin xyz="${x1} ${y1} ${z1}" rpy="${roll} ${pitch} ${yaw}"/>
            <parent link="${parent_link}"/>
            <child link="${child_link}"/>
            <axis xyz="0 0 1"/>
            <xacro:if value="${type == 'revolute' or type == 'prismatic'}">
                <limit effort="${effort}" velocity="${velocity}" lower="${lower}" upper="${upper}"/>
            </xacro:if>
            <xacro:if value="${type == 'continuous'}">
                <limit effort="${effort}" velocity="${velocity}"/>
            </xacro:if>
        </joint>
    </xacro:macro>

    <xacro:macro name="transmission" params="joint_name actuator_name">
        <transmission name="${joint_name}_transmission">
            <type>transmission_interface/SimpleTransmission</type>
            <actuator name="${actuator_name}">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
            <joint name="${joint_name}">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
        </transmission>
    </xacro:macro>
</robot>